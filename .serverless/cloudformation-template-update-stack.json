{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CronjobLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/staticnews-production-cronjob"
      }
    },
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/staticnews-production-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/staticnews-production-artisan"
      }
    },
    "JobsWorkerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/staticnews-production-jobsWorker"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "staticnews",
                  "production",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/staticnews-production*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/staticnews-production*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "${Storage.Arn}"
                    },
                    {
                      "Fn::Sub": "${Storage.Arn}/*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "sqs:SendMessage",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "jobsQueueCEDBAE3E",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "jobsQueueCEDBAE3E",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "staticnews",
              "production",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "CronjobLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/staticnews/production/1677588026604-2023-02-28T12:40:26.604Z/staticnews.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "staticnews-production-cronjob",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "QUEUE_CONNECTION": "sqs",
            "SQS_QUEUE": {
              "Ref": "jobsQueueCEDBAE3E"
            },
            "FILESYSTEM_DISK": "s3",
            "TABLES_FILESYSTEM_DRIVER": "s3",
            "FORMS_FILESYSTEM_DRIVER": "s3",
            "FILAMENT_FILESYSTEM_DRIVER": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "APP_NAME": "Staticnews",
            "APP_ENV": "local",
            "APP_KEY": "base64:aQYnBivcqesBAqaT5wkC7I5NvpDAADoMkd5DLRTo3+s=",
            "APP_DEBUG": "true",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "staticnews-db.cpkrawbnohun.eu-central-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "staticnews",
            "DB_USERNAME": "fxbJifqhtT05",
            "DB_PASSWORD": "1Tos2V2gMQBi"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0d12c4e050bd8b3ac"
          ],
          "SubnetIds": [
            "subnet-098c1bf3f15e5ff19"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-central-1:209497400698:layer:php-82:18"
        ]
      },
      "DependsOn": [
        "CronjobLogGroup"
      ]
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/staticnews/production/1677588026604-2023-02-28T12:40:26.604Z/staticnews.zip"
        },
        "Handler": "public/index.php",
        "Runtime": "provided.al2",
        "FunctionName": "staticnews-production-web",
        "MemorySize": 1024,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "QUEUE_CONNECTION": "sqs",
            "SQS_QUEUE": {
              "Ref": "jobsQueueCEDBAE3E"
            },
            "FILESYSTEM_DISK": "s3",
            "TABLES_FILESYSTEM_DRIVER": "s3",
            "FORMS_FILESYSTEM_DRIVER": "s3",
            "FILAMENT_FILESYSTEM_DRIVER": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "APP_NAME": "Staticnews",
            "APP_ENV": "local",
            "APP_KEY": "base64:aQYnBivcqesBAqaT5wkC7I5NvpDAADoMkd5DLRTo3+s=",
            "APP_DEBUG": "true",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "staticnews-db.cpkrawbnohun.eu-central-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "staticnews",
            "DB_USERNAME": "fxbJifqhtT05",
            "DB_PASSWORD": "1Tos2V2gMQBi"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0d12c4e050bd8b3ac"
          ],
          "SubnetIds": [
            "subnet-098c1bf3f15e5ff19"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-central-1:209497400698:layer:php-82-fpm:18"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/staticnews/production/1677588026604-2023-02-28T12:40:26.604Z/staticnews.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "staticnews-production-artisan",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "QUEUE_CONNECTION": "sqs",
            "SQS_QUEUE": {
              "Ref": "jobsQueueCEDBAE3E"
            },
            "FILESYSTEM_DISK": "s3",
            "TABLES_FILESYSTEM_DRIVER": "s3",
            "FORMS_FILESYSTEM_DRIVER": "s3",
            "FILAMENT_FILESYSTEM_DRIVER": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "APP_NAME": "Staticnews",
            "APP_ENV": "local",
            "APP_KEY": "base64:aQYnBivcqesBAqaT5wkC7I5NvpDAADoMkd5DLRTo3+s=",
            "APP_DEBUG": "true",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "staticnews-db.cpkrawbnohun.eu-central-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "staticnews",
            "DB_USERNAME": "fxbJifqhtT05",
            "DB_PASSWORD": "1Tos2V2gMQBi"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0d12c4e050bd8b3ac"
          ],
          "SubnetIds": [
            "subnet-098c1bf3f15e5ff19"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-central-1:209497400698:layer:php-82:18",
          "arn:aws:lambda:eu-central-1:209497400698:layer:console:82"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "JobsWorkerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/staticnews/production/1677588026604-2023-02-28T12:40:26.604Z/staticnews.zip"
        },
        "Handler": "worker.php",
        "Runtime": "provided.al2",
        "FunctionName": "staticnews-production-jobsWorker",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "QUEUE_CONNECTION": "sqs",
            "SQS_QUEUE": {
              "Ref": "jobsQueueCEDBAE3E"
            },
            "FILESYSTEM_DISK": "s3",
            "TABLES_FILESYSTEM_DRIVER": "s3",
            "FORMS_FILESYSTEM_DRIVER": "s3",
            "FILAMENT_FILESYSTEM_DRIVER": "s3",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "APP_NAME": "Staticnews",
            "APP_ENV": "local",
            "APP_KEY": "base64:aQYnBivcqesBAqaT5wkC7I5NvpDAADoMkd5DLRTo3+s=",
            "APP_DEBUG": "true",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "staticnews-db.cpkrawbnohun.eu-central-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "staticnews",
            "DB_USERNAME": "fxbJifqhtT05",
            "DB_PASSWORD": "1Tos2V2gMQBi"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0d12c4e050bd8b3ac"
          ],
          "SubnetIds": [
            "subnet-098c1bf3f15e5ff19"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-central-1:209497400698:layer:php-82:18"
        ]
      },
      "DependsOn": [
        "JobsWorkerLogGroup"
      ]
    },
    "CronjobLambdaVersionFGFyv8w9GflhS8VDwOg9YnDENStXoyZiJBeiUa2MAw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CronjobLambdaFunction"
        },
        "CodeSha256": "ppKD0WkIaXLMpZAwUoSfkG13TjYvm6/OYikWP84xdig="
      }
    },
    "WebLambdaVersion9ytOXEN5KEMwKWiw0Vxd4NQVK936VIv5k1o6PgKuI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "ppKD0WkIaXLMpZAwUoSfkG13TjYvm6/OYikWP84xdig="
      }
    },
    "ArtisanLambdaVersionqeqyLeUSGRrWQXYSj3hqRULKfoRo072DWfJ9ELHXg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "ppKD0WkIaXLMpZAwUoSfkG13TjYvm6/OYikWP84xdig="
      }
    },
    "JobsWorkerLambdaVersionojya9kf5mlxqft5X1hVdki5WmvifKMonB4xhzYI1o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JobsWorkerLambdaFunction"
        },
        "CodeSha256": "ppKD0WkIaXLMpZAwUoSfkG13TjYvm6/OYikWP84xdig="
      }
    },
    "CronjobEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Input": "\"schedule:run\"",
            "Arn": {
              "Fn::GetAtt": [
                "CronjobLambdaFunction",
                "Arn"
              ]
            },
            "Id": "cronjobSchedule"
          }
        ]
      }
    },
    "CronjobLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CronjobLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CronjobEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "JobsWorkerEventSourceMappingSQSJobsQueueCEDBAE3E": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "MaximumBatchingWindowInSeconds": 0,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "jobsQueueCEDBAE3E",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "JobsWorkerLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true,
        "FunctionResponseTypes": [
          "ReportBatchItemFailures"
        ]
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "production-staticnews",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type",
            "X-Amz-Date",
            "Authorization",
            "X-Api-Key",
            "X-Amz-Security-Token",
            "X-Amz-User-Agent",
            "X-Amzn-Trace-Id"
          ],
          "AllowMethods": [
            "OPTIONS",
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "HEAD",
            "DELETE"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "WebLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationWeb": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteDefault": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationWeb"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationWeb"
    },
    "Storage": {
      "Properties": {
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "HEAD"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ]
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "StorageBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Storage"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Sub": "${Storage.Arn}/*"
              }
            }
          ]
        }
      }
    },
    "jobsDlqD18CF374": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": "staticnews-production-jobs-dlq"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "jobsQueueCEDBAE3E": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "staticnews-production-jobs",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "jobsDlqD18CF374",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        },
        "VisibilityTimeout": 36
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-staticnews-production-ServerlessDeploymentBucketName"
      }
    },
    "CronjobLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CronjobLambdaVersionFGFyv8w9GflhS8VDwOg9YnDENStXoyZiJBeiUa2MAw"
      },
      "Export": {
        "Name": "sls-staticnews-production-CronjobLambdaFunctionQualifiedArn"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersion9ytOXEN5KEMwKWiw0Vxd4NQVK936VIv5k1o6PgKuI"
      },
      "Export": {
        "Name": "sls-staticnews-production-WebLambdaFunctionQualifiedArn"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionqeqyLeUSGRrWQXYSj3hqRULKfoRo072DWfJ9ELHXg"
      },
      "Export": {
        "Name": "sls-staticnews-production-ArtisanLambdaFunctionQualifiedArn"
      }
    },
    "JobsWorkerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JobsWorkerLambdaVersionojya9kf5mlxqft5X1hVdki5WmvifKMonB4xhzYI1o"
      },
      "Export": {
        "Name": "sls-staticnews-production-JobsWorkerLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-staticnews-production-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-staticnews-production-HttpApiUrl"
      }
    },
    "jobsQueueArnA5A2FF7E": {
      "Description": "ARN of the \"jobs\" SQS queue.",
      "Value": {
        "Fn::GetAtt": [
          "jobsQueueCEDBAE3E",
          "Arn"
        ]
      }
    },
    "jobsQueueUrl573F5B7A": {
      "Description": "URL of the \"jobs\" SQS queue.",
      "Value": {
        "Ref": "jobsQueueCEDBAE3E"
      }
    },
    "jobsDlqUrl2C7FA9D4": {
      "Description": "URL of the \"jobs\" SQS dead letter queue.",
      "Value": {
        "Ref": "jobsDlqD18CF374"
      }
    }
  }
}